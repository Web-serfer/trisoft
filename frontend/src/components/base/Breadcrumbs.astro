---
import { Icon } from 'astro-icon/components';
import { routeTranslations } from '@lib/routeTranslations';

const path = Astro.url.pathname
const parts = path.split('/').filter(part => part)

const breadcrumbs = parts.map((part, index) => {
  const href = '/' + parts.slice(0, index + 1).join('/')
  const translatedName = routeTranslations[part.toLowerCase()] || part.charAt(0).toUpperCase() + part.slice(1);
  return { name: translatedName, href };
})

---

<nav aria-label="Breadcrumb" class="bg-gray-50 border-b border-gray-200">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <ol class="flex items-center space-x-2 text-sm text-gray-500 py-3">
      <li>
        <a href="/" class="home-link-icon">
            <Icon name="home" size={28} />
          <span class="sr-only">Главная</span>
        </a>
      </li>
      {breadcrumbs.map((crumb, index) => (
        <li class="flex items-center">
          <svg class="h-5 w-5 text-gray-400 mx-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
          {index === breadcrumbs.length - 1 ? (
            <span class="font-medium text-gray-700">{crumb.name}</span>
          ) : (
            <a href={crumb.href} class="hover:text-gray-700 hover:underline">{crumb.name}</a>
          )}
        </li>
      ))}
    </ol>
  </div>
</nav>
