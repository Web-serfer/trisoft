---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'a'> {
  href: string;
  text: string;
  variant?: 'primary' | 'secondary';
  size?: 'large' | 'normal';
  class?: string;
  }

const { href, text, variant = 'primary', size = 'normal', class: customClass, ...rest } = Astro.props;

const baseClasses = 'group relative inline-flex items-center justify-center overflow-hidden rounded-full font-semibold transform transition-all duration-300 hover:-translate-y-0.5';

const variantClasses = {
  primary: 'bg-gradient-to-r from-blue-600 to-indigo-600 text-white shadow-lg hover:shadow-blue-500/30',
  secondary: 'border border-gray-200/80 bg-white/80 text-gray-700 shadow-md backdrop-blur-sm hover:border-gray-300 hover:bg-white hover:shadow-lg',
  };

const sizeClasses = {
  large: 'px-8 py-3 text-lg',
  normal: 'px-6 py-2.5 text-base',
  };

const allClasses = [ baseClasses, variantClasses[variant], sizeClasses[size], customClass ];
---

<a href={href} class:list={allClasses} {...rest}>
  <span class="relative z-10">{text}</span>
  {variant === 'primary' && (
      <div class="absolute inset-0 bg-gradient-to-r from-blue-700 to-indigo-700 opacity-0 transition-all duration-300 group-hover:opacity-100"></div>
  )}
</a>