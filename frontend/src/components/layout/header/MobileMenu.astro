---
import Logo from './Logo.astro';
import { menus } from './navData';
import Button from '@components/base/Button.astro';
---

<div>
  <button
      id="mobile-menu-toggle"
      type="button"
      aria-label="Открыть меню"
      aria-expanded="false"
      class="relative z-[60] rounded-full bg-gray-200/50 p-2 lg:hidden"
  >
    <svg id="menu-open-icon" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <title>Открыть меню</title>
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
    </svg>
    <svg id="menu-close-icon" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-800 hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <title>Закрыть меню</title>
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
    </svg>
  </button>

  
</div>

<script>
  import { menus } from './navData';

  function initMobileMenu() {
    const toggleButton = document.getElementById('mobile-menu-toggle');
    const overlay = document.getElementById('mobile-menu-overlay');
    const container = document.getElementById('mobile-menu-container');
    const openIcon = document.getElementById('menu-open-icon');
    const closeIcon = document.getElementById('menu-close-icon');
    const navElement = container.querySelector('nav');

    if (!toggleButton || !overlay || !container || !openIcon || !closeIcon || !navElement) {
      return;
    }

    if (navElement.children.length === 0) {
      menus.forEach((menu, index) => {
        const link = document.createElement('a');
        link.href = menu.url;
        link.textContent = menu.name;
        link.classList.add(
          'mobile-menu-link',
          'block',
          'transform',
          'text-center',
          'text-xl',
          'font-medium',
          'text-gray-600',
          'transition-all',
          'duration-300',
          'ease-out',
          'hover:text-cyan-600',
          'opacity-0',
          'translate-y-4'
        );
        link.style.transitionDelay = `${100 + index * 75}ms`;
        navElement.appendChild(link);
      });
    }

    const navLinks = navElement.querySelectorAll('.mobile-menu-link');

    const openMenu = () => {
      toggleButton.setAttribute('aria-expanded', 'true');
      toggleButton.setAttribute('aria-label', 'Закрыть меню');
      openIcon.classList.add('hidden');
      closeIcon.classList.remove('hidden');

      container.classList.remove('-translate-x-full');
      overlay.classList.remove('opacity-0', 'pointer-events-none');

      navLinks.forEach(link => {
        link.classList.remove('opacity-0', 'translate-y-4');
      });

      document.body.style.overflow = 'hidden';
      window.addEventListener('keydown', handleEscKey);
    };

    const closeMenu = () => {
      toggleButton.setAttribute('aria-expanded', 'false');
      toggleButton.setAttribute('aria-label', 'Открыть меню');
      openIcon.classList.remove('hidden');
      closeIcon.classList.add('hidden');

      container.classList.add('-translate-x-full');
      overlay.classList.add('opacity-0', 'pointer-events-none');

      navLinks.forEach(link => {
        link.classList.add('opacity-0', 'translate-y-4');
      });

      document.body.style.overflow = 'auto';
      window.removeEventListener('keydown', handleEscKey);
    };

    const handleToggleClick = () => {
      const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';
      if (isExpanded) {
        closeMenu();
      } else {
        openMenu();
      }
    };

    const handleEscKey = (event) => {
      if (event.key === 'Escape') {
        closeMenu();
      }
    };

    toggleButton.addEventListener('click', handleToggleClick);
    overlay.addEventListener('click', closeMenu);
    navLinks.forEach(link => {
      link.addEventListener('click', closeMenu);
    });
  }

  initMobileMenu();
  document.addEventListener('astro:page-load', initMobileMenu);
</script>