---
import Logo from './Logo.astro';
import Navbar from './Navbar.astro';
import MobileMenu from './MobileMenu.tsx';
import Modal from '@components/base/Modal.tsx';
---

<header id="main-header" class="sticky top-0 z-50 w-full h-20">
  <div id="header-inner-container" class="h-full bg-white shadow-sm transition-all duration-300 relative">
    <div class="max-w-7xl mx-auto h-full px-4">
      <div class="flex items-center justify-between h-full select-none">
        <Logo />
        <div class="flex-1 flex justify-center">
          <nav class="hidden lg:flex items-center">
            <Navbar />
          </nav>
        </div>
        <div class="hidden lg:flex items-center gap-x-4">
          <a href="/login" class="group px-8 py-2 bg-gradient-to-r from-blue-500 to-blue-600 text-white font-semibold rounded-xl shadow-lg hover:shadow-blue-500/25 transform hover:-translate-y-1 transition-all duration-300 flex items-center justify-center">
            Вход
          </a>
        </div>
        <div class="lg:hidden">
          <MobileMenu client:load />
        </div>
      </div>
    </div>
    <div id="scroll-line" class="absolute bottom-0 left-0 h-0.5 bg-blue-500 transition-all duration-300" style="width: 0;"></div>
  </div>
</header>

<Modal client:load />

<style>
  @keyframes fade-in-down {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  #main-header {
    animation: fade-in-down 0.8s ease-out forwards;
  }
</style>

<script>
  const headerInnerContainer = document.getElementById('header-inner-container');
  const scrollLine = document.getElementById('scroll-line');

  const scrollHandler = () => {
    // Ensure the header always has the default opaque classes
    headerInnerContainer.classList.add('bg-white', 'shadow-sm');
    headerInnerContainer.classList.remove('bg-white/80', 'backdrop-blur-lg', 'shadow-md', 'rounded-b-xl');
    
    // Control the scroll line animation
    if (window.scrollY > 20) {
      scrollLine.style.width = '100%';
    } else {
      scrollLine.style.width = '0%';
    }
  };

  window.addEventListener('scroll', scrollHandler);

  // Run on page load to ensure correct initial state
  document.addEventListener('astro:page-load', () => {
    scrollHandler(); 
  });
  // Cleanup the event listener when the component is unmounted
  document.addEventListener('astro:before-swap', () => {
      window.removeEventListener('scroll', scrollHandler)
  })
</script>
